В игре есть три фракции:
France, England, Germany

Все юниты наследуются от класса Soldier:

class Warrior : public Soldier
class Archer : public Soldier
class Swordsman : public Soldier

Кроме того, каждой фракции соотвествует её лидер - класс, наследующийся от 
класса Hero:

class Napoleon : public Hero
class Elizabeth : public Hero
class Bismarck : public Hero

Взаимодействие между отдельными юнитами осуществляется через метод
causeDamage (который вызывает у противника метод takeDamage), для
лучника этот метод переопределен, иногда он может промахиваться,
остальные же юниты просто наносят урон в некотором диапазоне.

Юниты создаются через классы <country_name>Factory, для создания юнитов 
конкретной фракции необходимо создавать соответствующую фабрику (все 
кокретные фабрики наследуются от общего класса, описывающего интерфейс) 
- здесь применяется паттерн "абстрактная фабрика":

class FrenchFactory : public AbstractFactory
class EnglishFactory : public AbstractFactory
class GermanFactory : public AbstractFactory

Через фабрику также можно получить доступ к лидеру соответствующей страны.

Несложно понять, что внутри одного запуска программы фабрику конкретной страны
нет смысла создавать несколько раз. Чтобы контролировать существование лишь
одной фабрики каждой страны в любой момент времени, доступ к фабрике произво-
дится через функцию getFactory, которая, в свою очередь обращается к промежу-
точному классу FactoryCacher - здесь применяется паттерн Proxy.

Для работы с группами объектов используется класс Army, хранящий в себе 
дерево юнитов - паттерн Компоновщик. С помощью этого класса получается удобно
реализовать, например, такие методы, как train, recover, повышающие соответст-
вующие характеристики всей группы.

Класс Action и его наследники отвечают за действия, производимые пользователем
над юнитами (на данный момент, возможных действий два):
class RecoverAction : public Action - восстанавливает утраченные очки здоровья
class TrainAction: public Action - повышает урон юнита
- в реализации такого поведения применяется паттерн Decorator.

Игровой процесс на данный момент состоит из:
- выбора фракции
- покупки юнитов на определенную сумму денег
- последовательного сражения с случайно сгенерерированными армиями другой фракции
- управления армией в промежутках между волнами
Для удобства работы он инкапсулируется в классе Game.

Для сборки проекта используется cmake.
